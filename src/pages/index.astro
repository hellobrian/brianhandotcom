---
import BaseLayout from "../layouts/BaseLayout.astro";
import { SITE_TITLE, SITE_DESCRIPTION } from "../consts";
import { getCollection } from "astro:content";
import BlogCard from "../components/BlogCard.astro";

// Get all entries from a collection.
// Requires the name of the collection as an argument.
// Example: retrieve `src/content/blog/**`
const allBlogPosts = await getCollection("blog");

const posts = allBlogPosts.filter((blog) =>
  blog.data.tags?.includes("featured")
);

const uniqueTags = [
  ...new Set(allBlogPosts.map((post) => post.data.tags).flat()),
].filter((tag) => tag !== undefined);
---

<BaseLayout title={SITE_TITLE} description={SITE_DESCRIPTION}>
  <main>
    <section>
      <h2>Featured</h2>
      <ul>
        {
          posts
            .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf())
            .map((post, index) => (
              <BlogCard
                slug={post.slug}
                title={post.data.title}
                pubDate={post.data.pubDate}
                cover={post.data.cover}
                coverAlt={post.data.coverAlt}
                loading={index <= 2 ? "eager" : "lazy"}
              />
            ))
        }
      </ul>
    </section>
    <section class="tags">
      <h2 class="title">Tags</h2>
      <ul>
        {
          uniqueTags.map((tag) => (
            <li>
              <a href={`/tags/${tag}`}>{tag}</a>
            </li>
          ))
        }
      </ul>
    </section>
  </main>
</BaseLayout>

<style>
  h2 {
    text-align: center;
  }
  ul {
    list-style: none;
    padding: 0;
  }

  .tags .title {
    text-align: center;
  }
  .tags ul {
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
    list-style: none;
    justify-content: center;
    padding: 0;
    max-inline-size: 100%;
  }
</style>
